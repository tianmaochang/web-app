<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder location="classpath:config/*.properties"/>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url.site}" />
		<property name="username" value="${jdbc.username.site}" />
		<property name="password" value="${jdbc.password.site}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${jdbc.pool.init}" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${jdbc.pool.minIdle}" />
		<!-- 连接池最大使用数量 -->
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="filters" value="stat" />
	</bean>

	<bean id="dataSource_focus" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url.focus}" />
		<property name="username" value="${jdbc.username.focus}" />
		<property name="password" value="${jdbc.password.focus}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${jdbc.pool.init}" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${jdbc.pool.minIdle}" />
		<!-- 连接池最大使用数量 -->
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="filters" value="stat" />
	</bean>

	<bean id="dynamicDataSource" class="com.fyxt.w.base.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="dataSource" value-ref="dataSource"></entry>
				<entry key="dataSource_focus" value-ref="dataSource_focus"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" class="com.fyxt.w.base.mybatis.MySqlSessionFactoryBean">
		<property name="dataSource" ref="dynamicDataSource" />
		<property name="mapperLocations" value="classpath:mybatis/mappings/**/*.xml" />
		<property name="configLocation" value="classpath:mybatis/config.xml" />
		<property name="typeAliasesPackage" value="com.fyxt.w.entity" />
		<property name="enumBasePackage" value="com.fyxt.w.entity.common" />
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynamicDataSource"/>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.fyxt.w.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<aop:aspectj-autoproxy/>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="appService" expression="execution(* com.fyxt.w.service..*Service.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="appService"/>
	</aop:config>

</beans>